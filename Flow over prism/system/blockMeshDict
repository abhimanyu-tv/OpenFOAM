/*--------------------------------*- C++ -*----------------------------------*\
| =========                 |                                                 |
| \\      /  F ield         | OpenFOAM: The Open Source CFD Toolbox           |
|  \\    /   O peration     | Version:  5                                     |
|   \\  /    A nd           | Web:      www.OpenFOAM.com                      |
|    \\/     M anipulation  |                                                 |
\*---------------------------------------------------------------------------*/
FoamFile
{
    version     2.0;
    format      ascii;
    class       dictionary;
    object      blockMeshDict;
}
// * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * //

convertToMeters 1;

vertices        
(
    (0 0 0)
    (0 10.5 0)
    (0 21 0)

    (10 21 0)
    (10 10.5 0)
    (10 0 0)

    (11 0 0)
    (11 10 0)
    (11 11 0)
    (11 21 0)

    (30 21 0)
    (30 11 0)
    (30 10 0)
    (30 0 0)


    (0 0 0.01)
    (0 10.5 0.01)
    (0 21 0.01)

    (10 21 0.01)
    (10 10.5 0.01)
    (10 0 0.01)

    (11 0 0.01)
    (11 10 0.01)
    (11 11 0.01)
    (11 21 0.01)

    (30 21 0.01)
    (30 11 0.01)
    (30 10 0.01)
    (30 0 0.01)
);


blocks          
(
    hex (0 5 4 1 14 19 18 15) (180 130 1) simpleGrading (1 1 1)
    hex (1 4 3 2 15 18 17 16) (180 130 1) simpleGrading (1 1 1)
    hex (4 8 9 3 18 22 23 17) (30 130 1) simpleGrading (1 1 1)
    hex (5 6 7 4 19 20 21 18) (30 130 1) simpleGrading (1 1 1)
    hex (6 13 12 7 20 27 26 21) (320 130 1) simpleGrading (1 1 1)
    hex (7 12 11 8 21 26 25 22) (320 30 1) simpleGrading (1 1 1)
    hex (8 11 10 9 22 25 24 23) (320 130 1) simpleGrading (1 1 1)
);


edges           
(
);


boundary
(
    wall
    {
        type wall;
        faces
        (
            (2 3 17 16)
            (3 9 23 17)
            (9 10 24 23)
            (0 5 19 14)
            (5 6 20 19)
            (6 13 27 20)
        );
    }
    prism
    {
        type wall;
        faces
        (
            (4 7 21 18)
            (4 8 22 18)
            (8 7 22 21)
        );
    }
    inlet
    {
        type patch;
        faces
        (
            (0 1 15 14)
            (1 2 16 15)
        );
    }
    outlet
    {
        type patch;
        faces
        (
            (13 12 26 27)
            (12 11 25 26)
            (11 10 24 25)
        );
    }
    frontAndBack
    {
        type empty;
        faces
        (
            (0 5 4 1)
            (1 4 3 2)
            (4 8 9 3)
            (5 6 7 4)
            (6 13 12 7)
            (7 12 11 8)
            (8 11 10 9)

            (14 19 18 15)
            (15 18 17 16)
            (18 22 23 17)
            (19 20 21 18)
            (20 27 26 21)
            (21 26 25 22)
            (22 25 24 23)
        );
    }
);


mergePatchPairs 
(
);

// ************************************************************************* //
